/* onguard/css/adaptable_screen.css */
/* Styles for responsive design, primarily focused on mobile navigation and specific overrides */

@media (max-width: 768px) {
    /* Header and Desktop Navigation adjustments from original plan */
    /* These should be confirmed against new global.css from user which also has mobile overrides */
    header nav {
        /* If global.css @media handles desktop nav hiding, this might be redundant */
        /* User's global.css @media had: header nav ul { display: none; } */
        /* Forcing hide if it's the main desktop nav */
        display: none; 
    }
    .toggle-container { /* Desktop lang/theme toggles */ 
        display: none; 
    }

    /* Hero text adjustments from original plan */
    .hero h2 {
        font-size: 1.8rem; /* User's global.css @media had 2rem */
    }
    .hero p {
        font-size: 1rem; /* User's global.css @media had 1.1rem */
    }

    /* Services stacking from original plan */
    .services {
        flex-direction: column;
        align-items: center;
    }
    .service-item {
        /* User's global.css @media had width: 100% */
        width: 90%; 
        margin: 10px 0; /* My original was 10px 0, user global had margin-bottom: 1rem */
    }

    /* Modal adjustments for small screens from my original plan */
    /* User's global.css @media has .modal-content { max-width: 95%; height: 90vh; } */
    /* This makes it full width and no border-radius */
    .modal-content {
        width: 100%;
        max-height: 100vh; 
        border-radius: 0;
        /* background-color and color are handled by global.css variables */
    }

    /* Form layout stacking from my original plan */
    /* User's global.css @media has .modal-body form { grid-template-columns: 1fr; } */
    /* This assumes .form-row and .form-cell are used for flex layout inside forms */
    .form-row {
        flex-direction: column; 
    }
    .form-cell {
        flex: 1 1 100%; 
        padding: 0; 
        margin-bottom: 15px; 
    }
    .form-cell:last-child {
        margin-bottom: 0;
    }

    /* CSS Variables for Mobile Nav Dimensions (defined here for clarity if not in :root of global) */
    /* These are already in my :root block in this file, but global.css might be better place if used elsewhere */
    :root {
        --mobile-nav-base-height: 55px; 
        --mobile-nav-bottom-offset: env(safe-area-inset-bottom, 0px); 
    }
    
    /* Mobile Bottom Navigation Bar (for index.html) */
    .mobile-nav { /* This is for the nav bar on index.html */
        display: flex;
        justify-content: space-around;
        align-items: center; 
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%; 
        
        background-color: var(--primary-color); /* User intent: purple bar */
        border-top: 1px solid var(--border-color-current); /* Themed border */
        
        padding: 0.5rem 0; /* User's padding preference */
        padding-bottom: calc(0.5rem + var(--mobile-nav-bottom-offset)); /* Apply safe area */
        
        height: calc(var(--mobile-nav-base-height) + var(--mobile-nav-bottom-offset)); 
        
        box-shadow: 0 -2px 5px rgba(0,0,0,0.1); 
        box-sizing: border-box; 
        z-index: 10002; /* Above mobile services menu popup */
    }

    .mobile-nav-item { /* For index.html mobile nav */
        display: flex;
        flex-direction: column;
        justify-content: center; 
        align-items: center;
        text-decoration: none;
        color: var(--header-text-current); /* Text on primary background (e.g., white) */
        font-size: 0.9rem; /* User's font size preference */
        background: none;
        border: none;
        cursor: pointer;
        padding: 0; 
        flex: 1; 
        height: var(--mobile-nav-base-height); 
    }

    .mobile-nav-item i {
        font-size: 1.2rem; 
        margin-bottom: 3px; 
    }

    .mobile-nav-item.active { 
        color: var(--accent-color); 
    }

    /* Mobile Services Menu (popup for index.html mobile nav) */
    #mobile-services-menu { /* ID for index.html's services popup */
        position: fixed;
        bottom: calc(var(--mobile-nav-base-height) + var(--mobile-nav-bottom-offset)); 
        left: 0;
        width: 100%; 
        background-color: var(--bg-current); /* Themed background */
        padding: 1rem; /* User's padding preference */
        border-top: 1px solid var(--border-color-current); /* Themed border */
        box-shadow: 0 -2px 10px rgba(0,0,0,0.1); 
        z-index: 10001; 
        transform: translateY(100%); 
        transition: transform 0.3s ease-in-out; 
        box-sizing: border-box; 
        max-height: 50%; /* From user CSS for a mobile menu */
        overflow-y: auto; /* From user CSS */
    }

    #mobile-services-menu.active {
        transform: translateY(0); 
    }

    #mobile-services-menu ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    #mobile-services-menu ul li { 
        margin-bottom: 0.5rem; /* From user CSS */
        border-bottom: 1px solid var(--border-color-current); /* Themed separator */
    }
    #mobile-services-menu ul li:last-child {
        border-bottom: none;
    }

    #mobile-services-menu ul li a {
        display: block;
        padding: 0.75rem 0; /* Adjusted padding */
        text-decoration: none;
        color: var(--link-color-current); /* Use themed link color */
        font-weight: 600; /* User's font-weight preference */
    }
    
    /* Body padding to avoid overlap with fixed mobile nav (for index.html) */
    body {
        /* This rule might conflict if global.css also sets body padding differently in its media query */
        /* User's global.css does not set body padding in its @media (max-width: 768px) block */
        /* So this should be fine. */
        padding-bottom: calc(var(--mobile-nav-base-height) + var(--mobile-nav-bottom-offset)); 
    }

    /* Floating icons adjustments for mobile (for index.html) */
    .floating-icons {
        bottom: calc(var(--mobile-nav-base-height) + var(--mobile-nav-bottom-offset) + 0.5rem); 
        right: 0.5rem; 
        gap: 0.75rem; 
    }

    .floating-icon { /* Size override for mobile for index.html FABs */
        width: 48px;   
        height: 48px;  
        font-size: 1.3rem; 
    }
}

/* Medium screens (tablets) - from my original plan */
@media (min-width: 769px) and (max-width: 1024px) {
    .services {
        /* User's global.css sets .service-item flex: 0 1 45%; which is 2 per row. */
        /* This can be removed if the global.css rule for .service-item achieves 2-per-row on tablet. */
        /* My original rule was: .service-item { width: calc(50% - 40px); } */
    }
    .hero h2 {
        font-size: 2.2rem; /* Slightly larger than mobile, smaller than desktop global */
    }
}

/* Redundant rule from user's global.css, already handled by @media (max-width: 768px) for these specific elements */
/* 
@media screen and (min-width: 769px) {
  .mobile-nav,
  #mobile-services-menu 
  { 
    display: none !important; 
  }
}
*/
